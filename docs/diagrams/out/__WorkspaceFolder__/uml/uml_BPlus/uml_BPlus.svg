<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="1892px" preserveAspectRatio="none" style="width:2680px;height:1892px;background:#FFFFFF;" version="1.1" viewBox="0 0 2680 1892" width="2680px" zoomAndPan="magnify"><defs/><g><!--MD5=[7871ea8b626a73d9c276939f028ca87a]
class BPlusTreeNode--><g id="elem_BPlusTreeNode"><rect codeLine="2" fill="#F1F1F1" height="193.7813" id="BPlusTreeNode" rx="5" ry="5" style="stroke:#181818;stroke-width:1.0;" width="392" x="1136.42" y="161"/><ellipse cx="1216.82" cy="193" fill="#ADD1B2" rx="22" ry="22" style="stroke:#181818;stroke-width:2.0;"/><path d="M1222.7575,204.2813 Q1221.6013,204.875 1220.32,205.1563 Q1219.0388,205.4688 1217.6325,205.4688 Q1212.6325,205.4688 1209.9763,202.1875 Q1207.3513,198.875 1207.3513,192.625 Q1207.3513,186.375 1209.9763,183.0625 Q1212.6325,179.75 1217.6325,179.75 Q1219.0388,179.75 1220.32,180.0625 Q1221.6325,180.375 1222.7575,180.9688 L1222.7575,186.4063 Q1221.5075,185.25 1220.32,184.7188 Q1219.1325,184.1563 1217.8825,184.1563 Q1215.195,184.1563 1213.82,186.3125 Q1212.445,188.4375 1212.445,192.625 Q1212.445,196.8125 1213.82,198.9688 Q1215.195,201.0938 1217.8825,201.0938 Q1219.1325,201.0938 1220.32,200.5625 Q1221.5075,200 1222.7575,198.8438 L1222.7575,204.2813 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="28" lengthAdjust="spacing" textLength="216" x="1256.02" y="202.6934">BPlusTreeNode</text><line style="stroke:#181818;stroke-width:1.0;" x1="1138.42" x2="1526.42" y1="225" y2="225"/><ellipse cx="1158.42" cy="252.2969" fill="none" rx="6" ry="6" style="stroke:#038048;stroke-width:2.0;"/><text fill="#000000" font-family="sans-serif" font-size="28" lengthAdjust="spacing" textLength="340" x="1176.42" y="258.9902">keys ï¼švector&lt;KeyType&gt;</text><ellipse cx="1158.42" cy="284.8906" fill="none" rx="6" ry="6" style="stroke:#038048;stroke-width:2.0;"/><text fill="#000000" font-family="sans-serif" font-size="28" lengthAdjust="spacing" textLength="208" x="1176.42" y="291.584">isLeaf: boolean</text><line style="stroke:#181818;stroke-width:1.0;" x1="1138.42" x2="1526.42" y1="306.1875" y2="306.1875"/><ellipse cx="1158.42" cy="333.4844" fill="#84BE84" rx="6" ry="6" style="stroke:#038048;stroke-width:2.0;"/><text fill="#000000" font-family="sans-serif" font-size="28" lengthAdjust="spacing" textLength="260" x="1176.42" y="340.1777">~BPlusTreeNode()</text></g><!--MD5=[0f0d29f459011f7736ef08aa8a826186]
class InternalNode--><g id="elem_InternalNode"><rect codeLine="8" fill="#F1F1F1" height="226.375" id="InternalNode" rx="5" ry="5" style="stroke:#181818;stroke-width:1.0;" width="718" x="1877.42" y="1621"/><ellipse cx="2139.92" cy="1653" fill="#ADD1B2" rx="22" ry="22" style="stroke:#181818;stroke-width:2.0;"/><path d="M2145.8575,1664.2813 Q2144.7013,1664.875 2143.42,1665.1563 Q2142.1388,1665.4688 2140.7325,1665.4688 Q2135.7325,1665.4688 2133.0763,1662.1875 Q2130.4513,1658.875 2130.4513,1652.625 Q2130.4513,1646.375 2133.0763,1643.0625 Q2135.7325,1639.75 2140.7325,1639.75 Q2142.1388,1639.75 2143.42,1640.0625 Q2144.7325,1640.375 2145.8575,1640.9688 L2145.8575,1646.4063 Q2144.6075,1645.25 2143.42,1644.7188 Q2142.2325,1644.1563 2140.9825,1644.1563 Q2138.295,1644.1563 2136.92,1646.3125 Q2135.545,1648.4375 2135.545,1652.625 Q2135.545,1656.8125 2136.92,1658.9688 Q2138.295,1661.0938 2140.9825,1661.0938 Q2142.2325,1661.0938 2143.42,1660.5625 Q2144.6075,1660 2145.8575,1658.8438 L2145.8575,1664.2813 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="28" lengthAdjust="spacing" textLength="176" x="2180.92" y="1662.6934">InternalNode</text><line style="stroke:#181818;stroke-width:1.0;" x1="1879.42" x2="2593.42" y1="1685" y2="1685"/><ellipse cx="1899.42" cy="1712.2969" fill="none" rx="6" ry="6" style="stroke:#038048;stroke-width:2.0;"/><text fill="#000000" font-family="sans-serif" font-size="28" lengthAdjust="spacing" textLength="230" x="1917.42" y="1718.9902">isLeafNode: bool</text><ellipse cx="1899.42" cy="1744.8906" fill="none" rx="6" ry="6" style="stroke:#038048;stroke-width:2.0;"/><text fill="#000000" font-family="sans-serif" font-size="28" lengthAdjust="spacing" textLength="666" x="1917.42" y="1751.584">children: vector&lt;BPlusTreeNode&lt;KeyType&gt; *&gt;</text><line style="stroke:#181818;stroke-width:1.0;" x1="1879.42" x2="2593.42" y1="1766.1875" y2="1766.1875"/><ellipse cx="1899.42" cy="1793.4844" fill="#84BE84" rx="6" ry="6" style="stroke:#038048;stroke-width:2.0;"/><text fill="#000000" font-family="sans-serif" font-size="28" lengthAdjust="spacing" textLength="196" x="1917.42" y="1800.1777">InternalNode()</text><ellipse cx="1899.42" cy="1826.0781" fill="#84BE84" rx="6" ry="6" style="stroke:#038048;stroke-width:2.0;"/><text fill="#000000" font-family="sans-serif" font-size="28" lengthAdjust="spacing" textLength="168" x="1917.42" y="1832.7715">isLeaf():bool</text></g><!--MD5=[66148af4ccdef8153c55d160aebad70b]
class LeafNode--><g id="elem_LeafNode"><rect codeLine="15" fill="#F1F1F1" height="291.5625" id="LeafNode" rx="5" ry="5" style="stroke:#181818;stroke-width:1.0;" width="440" x="1112.42" y="1588"/><ellipse cx="1258.92" cy="1620" fill="#ADD1B2" rx="22" ry="22" style="stroke:#181818;stroke-width:2.0;"/><path d="M1264.8575,1631.2813 Q1263.7013,1631.875 1262.42,1632.1563 Q1261.1388,1632.4688 1259.7325,1632.4688 Q1254.7325,1632.4688 1252.0763,1629.1875 Q1249.4513,1625.875 1249.4513,1619.625 Q1249.4513,1613.375 1252.0763,1610.0625 Q1254.7325,1606.75 1259.7325,1606.75 Q1261.1388,1606.75 1262.42,1607.0625 Q1263.7325,1607.375 1264.8575,1607.9688 L1264.8575,1613.4063 Q1263.6075,1612.25 1262.42,1611.7188 Q1261.2325,1611.1563 1259.9825,1611.1563 Q1257.295,1611.1563 1255.92,1613.3125 Q1254.545,1615.4375 1254.545,1619.625 Q1254.545,1623.8125 1255.92,1625.9688 Q1257.295,1628.0938 1259.9825,1628.0938 Q1261.2325,1628.0938 1262.42,1627.5625 Q1263.6075,1627 1264.8575,1625.8438 L1264.8575,1631.2813 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="28" lengthAdjust="spacing" textLength="130" x="1299.92" y="1629.6934">LeafNode</text><line style="stroke:#181818;stroke-width:1.0;" x1="1114.42" x2="1550.42" y1="1652" y2="1652"/><ellipse cx="1134.42" cy="1679.2969" fill="none" rx="6" ry="6" style="stroke:#038048;stroke-width:2.0;"/><text fill="#000000" font-family="sans-serif" font-size="28" lengthAdjust="spacing" textLength="230" x="1152.42" y="1685.9902">isLeafNode: bool</text><ellipse cx="1134.42" cy="1711.8906" fill="none" rx="6" ry="6" style="stroke:#038048;stroke-width:2.0;"/><text fill="#000000" font-family="sans-serif" font-size="28" lengthAdjust="spacing" textLength="352" x="1152.42" y="1718.584">values: vector&lt;uint64_t&gt;</text><ellipse cx="1134.42" cy="1744.4844" fill="none" rx="6" ry="6" style="stroke:#038048;stroke-width:2.0;"/><text fill="#000000" font-family="sans-serif" font-size="28" lengthAdjust="spacing" textLength="388" x="1152.42" y="1751.1777">next:LeafNode&lt;KeyType&gt; *</text><ellipse cx="1134.42" cy="1777.0781" fill="none" rx="6" ry="6" style="stroke:#038048;stroke-width:2.0;"/><text fill="#000000" font-family="sans-serif" font-size="28" lengthAdjust="spacing" textLength="374" x="1152.42" y="1783.7715">pre:LeafNode&lt;KeyType&gt; *</text><line style="stroke:#181818;stroke-width:1.0;" x1="1114.42" x2="1550.42" y1="1798.375" y2="1798.375"/><ellipse cx="1134.42" cy="1825.6719" fill="#84BE84" rx="6" ry="6" style="stroke:#038048;stroke-width:2.0;"/><text fill="#000000" font-family="sans-serif" font-size="28" lengthAdjust="spacing" textLength="150" x="1152.42" y="1832.3652">LeafNode()</text><ellipse cx="1134.42" cy="1858.2656" fill="#84BE84" rx="6" ry="6" style="stroke:#038048;stroke-width:2.0;"/><text fill="#000000" font-family="sans-serif" font-size="28" lengthAdjust="spacing" textLength="168" x="1152.42" y="1864.959">isLeaf():bool</text></g><!--MD5=[8eac7a77b34bebb45bb5a932e15e2fa1]
class BPlusTree--><g id="elem_BPlusTree"><rect codeLine="24" fill="#F1F1F1" height="845.6563" id="BPlusTree" rx="5" ry="5" style="stroke:#181818;stroke-width:1.0;" width="2104" x="280.42" y="622"/><ellipse cx="1252.92" cy="654" fill="#ADD1B2" rx="22" ry="22" style="stroke:#181818;stroke-width:2.0;"/><path d="M1258.8575,665.2813 Q1257.7013,665.875 1256.42,666.1563 Q1255.1388,666.4688 1253.7325,666.4688 Q1248.7325,666.4688 1246.0763,663.1875 Q1243.4513,659.875 1243.4513,653.625 Q1243.4513,647.375 1246.0763,644.0625 Q1248.7325,640.75 1253.7325,640.75 Q1255.1388,640.75 1256.42,641.0625 Q1257.7325,641.375 1258.8575,641.9688 L1258.8575,647.4063 Q1257.6075,646.25 1256.42,645.7188 Q1255.2325,645.1563 1253.9825,645.1563 Q1251.295,645.1563 1249.92,647.3125 Q1248.545,649.4375 1248.545,653.625 Q1248.545,657.8125 1249.92,659.9688 Q1251.295,662.0938 1253.9825,662.0938 Q1255.2325,662.0938 1256.42,661.5625 Q1257.6075,661 1258.8575,659.8438 L1258.8575,665.2813 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="28" lengthAdjust="spacing" textLength="142" x="1293.92" y="663.6934">BPlusTree</text><line style="stroke:#181818;stroke-width:1.0;" x1="282.42" x2="2382.42" y1="686" y2="686"/><rect fill="none" height="12" style="stroke:#C82930;stroke-width:2.0;" width="12" x="296.42" y="707.2969"/><text fill="#000000" font-family="sans-serif" font-size="28" lengthAdjust="spacing" textLength="470" x="320.42" y="719.9902">root:BPlusTreeNode&lt;KeyType&gt; *</text><rect fill="none" height="12" style="stroke:#C82930;stroke-width:2.0;" width="12" x="296.42" y="739.8906"/><text fill="#000000" font-family="sans-serif" font-size="28" lengthAdjust="spacing" textLength="190" x="320.42" y="752.584">MAX_KEYS:int</text><rect fill="none" height="12" style="stroke:#C82930;stroke-width:2.0;" width="12" x="296.42" y="772.4844"/><text fill="#000000" font-family="sans-serif" font-size="28" lengthAdjust="spacing" textLength="180" x="320.42" y="785.1777">MIN_KEYS:int</text><ellipse cx="302.42" cy="811.0781" fill="none" rx="6" ry="6" style="stroke:#038048;stroke-width:2.0;"/><text fill="#000000" font-family="sans-serif" font-size="28" lengthAdjust="spacing" textLength="390" x="320.42" y="817.7715">start:LeafNode&lt;KeyType&gt; *</text><line style="stroke:#181818;stroke-width:1.0;" x1="282.42" x2="2382.42" y1="832.375" y2="832.375"/><rect fill="#F24D5C" height="12" style="stroke:#C82930;stroke-width:2.0;" width="12" x="296.42" y="853.6719"/><text fill="#000000" font-family="sans-serif" font-size="28" lengthAdjust="spacing" textLength="1832" x="320.42" y="866.3652">doInsert((BPlusTreeNode&lt;KeyType&gt; *&amp;root, const KeyType &amp;key,uint64_t value, BPlusTreeNode&lt;KeyType&gt; *parent, int pos)): void</text><rect fill="#F24D5C" height="12" style="stroke:#C82930;stroke-width:2.0;" width="12" x="296.42" y="886.2656"/><text fill="#000000" font-family="sans-serif" font-size="28" lengthAdjust="spacing" textLength="1352" x="320.42" y="898.959">createRightInternalNode(const InternalNode&lt;KeyType&gt; *parentNode): InternalNode&lt;KeyType&gt; *</text><rect fill="#F24D5C" height="12" style="stroke:#C82930;stroke-width:2.0;" width="12" x="296.42" y="918.8594"/><text fill="#000000" font-family="sans-serif" font-size="28" lengthAdjust="spacing" textLength="1172" x="320.42" y="931.5527">createRightLeafNode(const LeafNode&lt;KeyType&gt; *leafNode): LeafNode&lt;KeyType&gt; *</text><rect fill="#F24D5C" height="12" style="stroke:#C82930;stroke-width:2.0;" width="12" x="296.42" y="951.4531"/><text fill="#000000" font-family="sans-serif" font-size="28" lengthAdjust="spacing" textLength="1642" x="320.42" y="964.1465">insertElement(const KeyType &amp;key, uint64_t value, BPlusTreeNode&lt;KeyType&gt; *const &amp;temp): LeafNode&lt;KeyType&gt; *</text><rect fill="#F24D5C" height="12" style="stroke:#C82930;stroke-width:2.0;" width="12" x="296.42" y="984.0469"/><text fill="#000000" font-family="sans-serif" font-size="28" lengthAdjust="spacing" textLength="1438" x="320.42" y="996.7402">splitInternalNode(BPlusTreeNode&lt;KeyType&gt; *parent, int pos,BPlusTreeNode&lt;KeyType&gt; *&amp;temp): void</text><rect fill="#F24D5C" height="12" style="stroke:#C82930;stroke-width:2.0;" width="12" x="296.42" y="1016.6406"/><text fill="#000000" font-family="sans-serif" font-size="28" lengthAdjust="spacing" textLength="1670" x="320.42" y="1029.334">borrowOrMergeLeafNode(BPlusTreeNode&lt;KeyType&gt; *&amp;root,InternalNode&lt;KeyType&gt; *parent, int pos,KeyType key):void</text><rect fill="#F24D5C" height="12" style="stroke:#C82930;stroke-width:2.0;" width="12" x="296.42" y="1049.2344"/><text fill="#000000" font-family="sans-serif" font-size="28" lengthAdjust="spacing" textLength="1662" x="320.42" y="1061.9277">borrowOrMergeInternalNode(BPlusTreeNode&lt;KeyType&gt; *&amp;internalNode, InternalNode&lt;KeyType&gt; *parent, int pos):void</text><rect fill="#F24D5C" height="12" style="stroke:#C82930;stroke-width:2.0;" width="12" x="296.42" y="1081.8281"/><text fill="#000000" font-family="sans-serif" font-size="28" lengthAdjust="spacing" textLength="2052" x="320.42" y="1094.5215">doRemove(std::vector&lt;uint64_t&gt; &amp;result, BPlusTreeNode&lt;KeyType&gt; *root, const KeyType &amp;key, BPlusTreeNode&lt;KeyType&gt; *parent, int pos):void</text><rect fill="#F24D5C" height="12" style="stroke:#C82930;stroke-width:2.0;" width="12" x="296.42" y="1114.4219"/><text fill="#000000" font-family="sans-serif" font-size="28" lengthAdjust="spacing" textLength="1108" x="320.42" y="1127.1152">binarySearchLeafNode(BPlusTreeNode&lt;KeyType&gt; *root, const KeyType key):int</text><rect fill="#F24D5C" height="12" style="stroke:#C82930;stroke-width:2.0;" width="12" x="296.42" y="1147.0156"/><text fill="#000000" font-family="sans-serif" font-size="28" lengthAdjust="spacing" textLength="1438" x="320.42" y="1159.709">binarySearchInternalNode(BPlusTreeNode&lt;KeyType&gt; *root, const KeyType key):LeafNode&lt;KeyType&gt; *</text><ellipse cx="302.42" cy="1185.6094" fill="#84BE84" rx="6" ry="6" style="stroke:#038048;stroke-width:2.0;"/><text fill="#000000" font-family="sans-serif" font-size="28" lengthAdjust="spacing" textLength="162" x="320.42" y="1192.3027">BPlusTree()</text><ellipse cx="302.42" cy="1218.2031" fill="#84BE84" rx="6" ry="6" style="stroke:#038048;stroke-width:2.0;"/><text fill="#000000" font-family="sans-serif" font-size="28" lengthAdjust="spacing" textLength="186" x="320.42" y="1224.8965">~BPlusTree()</text><ellipse cx="302.42" cy="1250.7969" fill="#84BE84" rx="6" ry="6" style="stroke:#038048;stroke-width:2.0;"/><text fill="#000000" font-family="sans-serif" font-size="28" lengthAdjust="spacing" textLength="656" x="320.42" y="1257.4902">insert(const KeyType &amp;key, uint64_t value):void</text><ellipse cx="302.42" cy="1283.3906" fill="#84BE84" rx="6" ry="6" style="stroke:#038048;stroke-width:2.0;"/><text fill="#000000" font-family="sans-serif" font-size="28" lengthAdjust="spacing" textLength="800" x="320.42" y="1290.084">remove(std::vector&lt;uint64_t&gt; &amp;result, KeyType key):void</text><ellipse cx="302.42" cy="1315.9844" fill="#84BE84" rx="6" ry="6" style="stroke:#038048;stroke-width:2.0;"/><text fill="#000000" font-family="sans-serif" font-size="28" lengthAdjust="spacing" textLength="602" x="320.42" y="1322.6777">optimizedSearch(const KeyType &amp;key):void</text><ellipse cx="302.42" cy="1348.5781" fill="#84BE84" rx="6" ry="6" style="stroke:#038048;stroke-width:2.0;"/><text fill="#000000" font-family="sans-serif" font-size="28" lengthAdjust="spacing" textLength="464" x="320.42" y="1355.2715">search(const KeyType &amp;key):void</text><ellipse cx="302.42" cy="1381.1719" fill="#84BE84" rx="6" ry="6" style="stroke:#038048;stroke-width:2.0;"/><text fill="#000000" font-family="sans-serif" font-size="28" lengthAdjust="spacing" textLength="874" x="320.42" y="1387.8652">searchRange(const KeyType &amp;start, const KeyType &amp;end):void</text><ellipse cx="302.42" cy="1413.7656" fill="#84BE84" rx="6" ry="6" style="stroke:#038048;stroke-width:2.0;"/><text fill="#000000" font-family="sans-serif" font-size="28" lengthAdjust="spacing" textLength="148" x="320.42" y="1420.459">print():void</text><ellipse cx="302.42" cy="1446.3594" fill="#84BE84" rx="6" ry="6" style="stroke:#038048;stroke-width:2.0;"/><text fill="#000000" font-family="sans-serif" font-size="28" lengthAdjust="spacing" textLength="234" x="320.42" y="1453.0527">setDegree():void</text></g><!--MD5=[607c7d1497709ed40c7dae7e433fe2db]
class UserOperation--><g id="elem_UserOperation"><rect codeLine="51" fill="#F1F1F1" height="487.125" id="UserOperation" rx="5" ry="5" style="stroke:#181818;stroke-width:1.0;" width="376" x="1598.42" y="14"/><ellipse cx="1678.82" cy="46" fill="#ADD1B2" rx="22" ry="22" style="stroke:#181818;stroke-width:2.0;"/><path d="M1684.7575,57.2813 Q1683.6013,57.875 1682.32,58.1563 Q1681.0388,58.4688 1679.6325,58.4688 Q1674.6325,58.4688 1671.9763,55.1875 Q1669.3513,51.875 1669.3513,45.625 Q1669.3513,39.375 1671.9763,36.0625 Q1674.6325,32.75 1679.6325,32.75 Q1681.0388,32.75 1682.32,33.0625 Q1683.6325,33.375 1684.7575,33.9688 L1684.7575,39.4063 Q1683.5075,38.25 1682.32,37.7188 Q1681.1325,37.1563 1679.8825,37.1563 Q1677.195,37.1563 1675.82,39.3125 Q1674.445,41.4375 1674.445,45.625 Q1674.445,49.8125 1675.82,51.9688 Q1677.195,54.0938 1679.8825,54.0938 Q1681.1325,54.0938 1682.32,53.5625 Q1683.5075,53 1684.7575,51.8438 L1684.7575,57.2813 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="28" lengthAdjust="spacing" textLength="200" x="1718.02" y="55.6934">UserOperation</text><line style="stroke:#181818;stroke-width:1.0;" x1="1600.42" x2="1972.42" y1="78" y2="78"/><line style="stroke:#181818;stroke-width:1.0;" x1="1600.42" x2="1972.42" y1="94" y2="94"/><ellipse cx="1620.42" cy="121.2969" fill="#84BE84" rx="6" ry="6" style="stroke:#038048;stroke-width:2.0;"/><text fill="#000000" font-family="sans-serif" font-size="28" lengthAdjust="spacing" textLength="308" x="1638.42" y="127.9902">createBPlusTreeMan()</text><ellipse cx="1620.42" cy="153.8906" fill="#84BE84" rx="6" ry="6" style="stroke:#038048;stroke-width:2.0;"/><text fill="#000000" font-family="sans-serif" font-size="28" lengthAdjust="spacing" textLength="324" x="1638.42" y="160.584">createBPlustTreeAuto()</text><ellipse cx="1620.42" cy="186.4844" fill="#84BE84" rx="6" ry="6" style="stroke:#038048;stroke-width:2.0;"/><text fill="#000000" font-family="sans-serif" font-size="28" lengthAdjust="spacing" textLength="146" x="1638.42" y="193.1777">printTree()</text><ellipse cx="1620.42" cy="219.0781" fill="#84BE84" rx="6" ry="6" style="stroke:#038048;stroke-width:2.0;"/><text fill="#000000" font-family="sans-serif" font-size="28" lengthAdjust="spacing" textLength="182" x="1638.42" y="225.7715">deleteNode()</text><ellipse cx="1620.42" cy="251.6719" fill="#84BE84" rx="6" ry="6" style="stroke:#038048;stroke-width:2.0;"/><text fill="#000000" font-family="sans-serif" font-size="28" lengthAdjust="spacing" textLength="204" x="1638.42" y="258.3652">searchRange()</text><ellipse cx="1620.42" cy="284.2656" fill="#84BE84" rx="6" ry="6" style="stroke:#038048;stroke-width:2.0;"/><text fill="#000000" font-family="sans-serif" font-size="28" lengthAdjust="spacing" textLength="252" x="1638.42" y="290.959">optimisedSearch()</text><ellipse cx="1620.42" cy="316.8594" fill="#84BE84" rx="6" ry="6" style="stroke:#038048;stroke-width:2.0;"/><text fill="#000000" font-family="sans-serif" font-size="28" lengthAdjust="spacing" textLength="300" x="1638.42" y="323.5527">insertTenMillionAuto()</text><ellipse cx="1620.42" cy="349.4531" fill="#84BE84" rx="6" ry="6" style="stroke:#038048;stroke-width:2.0;"/><text fill="#000000" font-family="sans-serif" font-size="28" lengthAdjust="spacing" textLength="172" x="1638.42" y="356.1465">deleteTree()</text><ellipse cx="1620.42" cy="382.0469" fill="#84BE84" rx="6" ry="6" style="stroke:#038048;stroke-width:2.0;"/><text fill="#000000" font-family="sans-serif" font-size="28" lengthAdjust="spacing" textLength="206" x="1638.42" y="388.7402">insertIntNode()</text><ellipse cx="1620.42" cy="414.6406" fill="#84BE84" rx="6" ry="6" style="stroke:#038048;stroke-width:2.0;"/><text fill="#000000" font-family="sans-serif" font-size="28" lengthAdjust="spacing" textLength="244" x="1638.42" y="421.334">checkNotCreate()</text><ellipse cx="1620.42" cy="447.2344" fill="#84BE84" rx="6" ry="6" style="stroke:#038048;stroke-width:2.0;"/><text fill="#000000" font-family="sans-serif" font-size="28" lengthAdjust="spacing" textLength="250" x="1638.42" y="453.9277">testInsertIntAuto()</text><ellipse cx="1620.42" cy="479.8281" fill="#84BE84" rx="6" ry="6" style="stroke:#038048;stroke-width:2.0;"/><text fill="#000000" font-family="sans-serif" font-size="28" lengthAdjust="spacing" textLength="302" x="1638.42" y="486.5215">testInsertIntNoOrder()</text></g><!--MD5=[9562d5affdde7b4799be293558a19c4d]
link LeafNode to BPlusTree--><g id="link_LeafNode_BPlusTree"><path codeLine="66" d="M1354.92,1587.76 C1356.4,1559.14 1357.5,1527.68 1358.26,1494.8 " fill="none" id="LeafNode-to-BPlusTree" style="stroke:#181818;stroke-width:2.0;"/><polygon fill="#181818" points="1358.78,1468.14,1350.544,1479.9793,1358.3048,1492.1353,1366.5409,1480.296,1358.78,1468.14" style="stroke:#181818;stroke-width:2.0;"/></g><!--MD5=[4f0b26e27e74a84536887e354def1aa7]
link BPlusTree to LeafNode--><g id="link_BPlusTree_LeafNode"><path codeLine="73" d="M1307.54,1468.14 C1308.14,1506.68 1309.2,1543.82 1310.7,1577.44 " fill="none" id="BPlusTree-to-LeafNode" style="stroke:#181818;stroke-width:2.0;stroke-dasharray:7.0,7.0;"/><polygon fill="#181818" points="1311.18,1587.76,1318.3497,1569.4134,1310.7233,1577.7704,1302.3663,1570.1441,1311.18,1587.76" style="stroke:#181818;stroke-width:2.0;"/></g><!--MD5=[cb8892bf2ce7e2f8fcf8a2cef1824c8c]
link BPlusTreeNode to BPlusTree--><g id="link_BPlusTreeNode_BPlusTree"><path codeLine="67" d="M1315.04,355.22 C1310.56,417.68 1307.92,504.36 1307.16,595.16 " fill="none" id="BPlusTreeNode-to-BPlusTree" style="stroke:#181818;stroke-width:2.0;"/><polygon fill="#181818" points="1307,621.5,1315.0789,609.553,1307.1582,597.5005,1299.0793,609.4475,1307,621.5" style="stroke:#181818;stroke-width:2.0;"/></g><!--MD5=[ffbf71b75ab7026d5da7bc549e6cb59d]
link BPlusTree to BPlusTreeNode--><g id="link_BPlusTree_BPlusTreeNode"><path codeLine="74" d="M1359.36,621.5 C1358.9,526.38 1356.32,433.62 1351.6,365.88 " fill="none" id="BPlusTree-to-BPlusTreeNode" style="stroke:#181818;stroke-width:2.0;stroke-dasharray:7.0,7.0;"/><polygon fill="#181818" points="1350.82,355.22,1344.1794,373.7646,1351.5629,365.1924,1360.1352,372.5759,1350.82,355.22" style="stroke:#181818;stroke-width:2.0;"/></g><!--MD5=[f6dd78774e589e246be7d7e6f3916580]
link InternalNode to BPlusTreeNode--><g id="link_InternalNode_BPlusTreeNode"><path codeLine="69" d="M2336.56,1620.64 C2370.02,1576.36 2403.18,1522.9 2420.42,1468 C2533.1,1109.28 2667.16,905.72 2420.42,622 C2294.38,477.06 1735.42,589.48 1564.42,502 C1511.06,474.7 1463.08,430.18 1424.78,386.74 " fill="none" id="InternalNode-to-BPlusTreeNode" style="stroke:#181818;stroke-width:2.0;"/><polygon fill="none" points="1413.62,395.22,1398.68,355.56,1435.1,377.24,1413.62,395.22" style="stroke:#181818;stroke-width:2.0;"/></g><!--MD5=[3b22b3b07678f06439375ab82871ec0f]
link LeafNode to BPlusTreeNode--><g id="link_LeafNode_BPlusTreeNode"><path codeLine="70" d="M1112.28,1710.3 C826.1,1677.02 350.3,1602.64 244.42,1468 C12,1172.44 24.48,926.96 244.42,622 C345.28,482.16 807.82,365.82 1096.38,305.2 " fill="none" id="LeafNode-to-BPlusTreeNode" style="stroke:#181818;stroke-width:2.0;"/><polygon fill="none" points="1093.88,291.42,1135.88,297.02,1099.56,318.84,1093.88,291.42" style="stroke:#181818;stroke-width:2.0;"/></g><!--MD5=[ff478f5aa4592a17264c08a12c203187]
link BPlusTree to InternalNode--><g id="link_BPlusTree_InternalNode"><path codeLine="72" d="M1888.2,1468.14 C1958.72,1521.56 2025.66,1572.3 2081.66,1614.74 " fill="none" id="BPlusTree-to-InternalNode" style="stroke:#181818;stroke-width:2.0;stroke-dasharray:7.0,7.0;"/><polygon fill="#181818" points="2089.86,1620.94,2080.3682,1603.6801,2081.8978,1614.8899,2070.688,1616.4195,2089.86,1620.94" style="stroke:#181818;stroke-width:2.0;"/></g><!--MD5=[08459f43006775eb086039f9c13fd9c3]
link UserOperation to BPlusTree--><g id="link_UserOperation_BPlusTree"><path codeLine="75" d="M1645.88,502.38 C1625.48,537.58 1603.98,574.66 1582.2,612.24 " fill="none" id="UserOperation-to-BPlusTree" style="stroke:#181818;stroke-width:2.0;stroke-dasharray:7.0,7.0;"/><polygon fill="#181818" points="1576.64,621.8,1592.5986,610.2534,1581.6627,613.1529,1578.7632,602.2171,1576.64,621.8" style="stroke:#181818;stroke-width:2.0;"/></g><!--MD5=[6b8dca0ba66b837d872bee80de9d0f5e]
@startuml
scale 2
class BPlusTreeNode {
    +keys ï¼švector<KeyType>
    +isLeaf: boolean
    +~BPlusTreeNode()
}
 
class InternalNode {
    +isLeafNode: bool
    +children: vector<BPlusTreeNode<KeyType> *>
    +InternalNode()
    +isLeaf():bool
}
 
class LeafNode {
    +isLeafNode: bool
    +values: vector<uint64_t>
    +next:LeafNode<KeyType> *
    +pre:LeafNode<KeyType> *
    +LeafNode()
    +isLeaf():bool
}
 
class BPlusTree {
    -root:BPlusTreeNode<KeyType> *
    -MAX_KEYS:int
    -MIN_KEYS:int
    -doInsert((BPlusTreeNode<KeyType> *&root, const KeyType &key,uint64_t value, BPlusTreeNode<KeyType> *parent, int pos)): void
    -createRightInternalNode(const InternalNode<KeyType> *parentNode): InternalNode<KeyType> *
    -createRightLeafNode(const LeafNode<KeyType> *leafNode): LeafNode<KeyType> *
    -insertElement(const KeyType &key, uint64_t value, BPlusTreeNode<KeyType> *const &temp): LeafNode<KeyType> *
    -splitInternalNode(BPlusTreeNode<KeyType> *parent, int pos,BPlusTreeNode<KeyType> *&temp): void
    -borrowOrMergeLeafNode(BPlusTreeNode<KeyType> *&root,InternalNode<KeyType> *parent, int pos,KeyType key):void
    -borrowOrMergeInternalNode(BPlusTreeNode<KeyType> *&internalNode, InternalNode<KeyType> *parent, int pos):void
    -doRemove(std::vector<uint64_t> &result, BPlusTreeNode<KeyType> *root, const KeyType &key, BPlusTreeNode<KeyType> *parent, int pos):void
    -binarySearchLeafNode(BPlusTreeNode<KeyType> *root, const KeyType key):int
    -binarySearchInternalNode(BPlusTreeNode<KeyType> *root, const KeyType key):LeafNode<KeyType> *
    +start:LeafNode<KeyType> *
    +BPlusTree()
    +~BPlusTree()
    +insert(const KeyType &key, uint64_t value):void
    +remove(std::vector<uint64_t> &result, KeyType key):void
    +optimizedSearch(const KeyType &key):void
    +search(const KeyType &key):void
    +searchRange(const KeyType &start, const KeyType &end):void
    +print():void
    +setDegree():void
}


class UserOperation {
    +createBPlusTreeMan()
    +createBPlustTreeAuto()
    +printTree()
    +deleteNode()
    +searchRange()
    +optimisedSearch()
    +insertTenMillionAuto()
    +deleteTree()
    +insertIntNode()
    +checkNotCreate()
    +testInsertIntAuto()
    +testInsertIntNoOrder()
}

LeafNode  - -* BPlusTree
BPlusTreeNode  - -* BPlusTree

InternalNode - -|>  BPlusTreeNode
LeafNode - -|>  BPlusTreeNode

BPlusTree..>InternalNode
BPlusTree..>LeafNode
BPlusTree..>BPlusTreeNode
UserOperation..>BPlusTree

@enduml

PlantUML version 1.2022.7(Tue Aug 23 01:01:30 CST 2022)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: null
--></g></svg>